<style>
.small-code pre code {
  font-size: 1em;
}
</style>

SVD: Dimension Retension
========================================================
author: CUNY - DATA 643: Recommender Systems
date: Walt Wells, Summer 2017
autosize: true
transition: rotate
transition-speed: slow

SVD:  What should we retain?
========================================================

<img src="SVD.jpeg", align="middle">
* Different methods for different purposes.  
* Our focus: dimension reduction for RecSys. 

Retain 80-90% of the Variability
========================================================

We will use sum of squares technique to determine variability reduction.  A general rule of thumb is to keep 80-90% of the variability.  

$$\frac{\sum_{i=1}^{n} \sigma_i'^{2}}{\sum_{i=1}^{n} \sigma_i^{2}} \approx .90$$

NOTE: if we remove singular values and reconstruct our original Matrix M to be M' prime, and calculate variability, we get the same answer. 

$$\frac{\sum_{i=1}^{n} \sigma_i'^{2}}{\sum_{i=1}^{n} \sigma_i^{2}} = \frac{\sum_{i=1}^{n} M_i'^{2}}{\sum_{i=1}^{n} M_i^{2}} $$


Example: Generate Toy Data
========================================================
class: small-code

```{r}
set.seed(643)
n <- 40; m <- round(n/2, 0)
# generate data
toyDF <- as.data.frame(replicate(m, floor(runif(n, 1,6))))
# add some real bias
toyDF[,1:3] <- toyDF[,1:3] + 1; toyDF[,4:6] <- toyDF[,4:6] - 1
toyDF[1:3,] <- toyDF[1:3,] + 1; toyDF[4:6,] <- toyDF[4:6,] - 1
toyDF[toyDF > 5] <- 5; toyDF[toyDF < 1] <- 1
dim(toyDF)
head(toyDF[1:6], 5)
```

Example: Center and Scale Data
========================================================
class: small-code

```{r}
scaledToyDF <- data.frame(scale(toyDF, 
                                center=T, 
                                scale=T))
head(scaledToyDF[1:6], 5)
```

Example: Perform SVD, Compare
========================================================
class: small-code

<br>

```{r}
S <- diag(svd(toyDF)$d)
S[1:3, 1:3]
```

***

<br>

```{r}
S_Center_Scale <- diag(svd(scaledToyDF)$d)
S_Center_Scale[1:3, 1:3]
```

Helper Function: Create Variability Table
========================================================
class: small-code

Create a table showing "energy" or variability kept for keeping top n singular values or concepts. 

```{r}
SVD_DimReductionTable <- function(s) {
    df <- data.frame()
    for (i in seq(nrow(s))) {
        m <- sum(s[1:i, 1:i]^2)/sum(s^2)
        df <- rbind(df, c(i, m))
    }
    names(df) <- c("concepts", "variability")
    df
}

mytable <- SVD_DimReductionTable(S)
mytable_CS <- SVD_DimReductionTable(S_Center_Scale)
```

Example: Determine Retension Cutoff
========================================================
class: small-code
left: 60%

```{r, echo=F}
library(ggplot2)
library(gridExtra)

plot1 <- ggplot(mytable, aes(concepts, variability)) + geom_point() + 
    geom_hline(yintercept = .9, color='red') + 
    ggtitle("Raw Data")

plot2 <- ggplot(mytable_CS, aes(concepts, variability)) + geom_point() + 
    geom_hline(yintercept = .9, color='red') + 
    ylab(NULL) +
    ggtitle("Centered and Scaled Data")

grid.arrange(plot1, plot2, ncol=2)
```

***

Raw Data
```{r, echo=F}
head(mytable, 6)
```

Center and Scaled
```{r, echo=F}
head(mytable_CS, 6)
```


Summary
========================================================

* Can compare sum of squares of reduced $\Sigma$ and original $\Sigma$
* For RecSys, rule of thumb is to keep 80-90% of the variability
* Centering and scaling data changes the concept/variability relationship

<img src="SVD2.jpeg", align="middle">


References
========================================================

* [Mining of Massive Datasets, Anand Rajaraman and Jeffrey Ullman, Chapter 11.3](http://infolab.stanford.edu/~ullman/mmds/book.pdf)
* [SVD Gives the Best Low Rank Approximation (Advanced) | Stanford (VIDEO)](https://youtu.be/c7e-D2tmRE0?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV)

